// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.Data;

#nullable disable

namespace NZWalks.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20250201143630_Seed dificulties and region data")]
    partial class Seeddificultiesandregiondata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("312c3022-95cb-4749-a0e7-814c5c8b3e9b"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("5f59e1cc-1105-45b4-91ed-3a82011ebea1"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("24d5e56f-673a-49e1-b772-bd48d02f6161"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageProperty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c888e272-d9cd-493b-8a01-e96d28e4beb0"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageProperty = "https://example.com/images/auckland.jpg"
                        },
                        new
                        {
                            Id = new Guid("5a8e078f-9b8f-4abd-bae8-e4b3dc200725"),
                            Code = "WLG",
                            Name = "Wellington",
                            RegionImageProperty = "https://example.com/images/wellington.jpg"
                        },
                        new
                        {
                            Id = new Guid("bb4ec9d4-79b9-47ba-83f2-8bfe04a014f3"),
                            Code = "CHC",
                            Name = "Christchurch",
                            RegionImageProperty = "https://example.com/images/christchurch.jpg"
                        },
                        new
                        {
                            Id = new Guid("4a87771b-4d56-491e-8a39-b5bb81b364f0"),
                            Code = "DUD",
                            Name = "Dunedin",
                            RegionImageProperty = "https://example.com/images/dunedin.jpg"
                        },
                        new
                        {
                            Id = new Guid("e1a22c36-2e7b-411d-a1aa-2cfd5f80c16d"),
                            Code = "HAM",
                            Name = "Hamilton",
                            RegionImageProperty = "https://example.com/images/hamilton.jpg"
                        },
                        new
                        {
                            Id = new Guid("21b657dc-bb98-4cc1-9758-0837c9e9cd64"),
                            Code = "TRG",
                            Name = "Tauranga",
                            RegionImageProperty = "https://example.com/images/tauranga.jpg"
                        },
                        new
                        {
                            Id = new Guid("f8a943ff-6c5a-4b28-b32e-2218145f0e47"),
                            Code = "NPE",
                            Name = "Napier",
                            RegionImageProperty = "https://example.com/images/napier.jpg"
                        },
                        new
                        {
                            Id = new Guid("53c87fdf-f8e2-4b3b-8bb6-33d4913f7dcd"),
                            Code = "NSN",
                            Name = "Nelson",
                            RegionImageProperty = "https://example.com/images/nelson.jpg"
                        },
                        new
                        {
                            Id = new Guid("3c8147da-7de1-4b88-9419-c18e38979d24"),
                            Code = "PMR",
                            Name = "Palmerston North",
                            RegionImageProperty = "https://example.com/images/palmerston-north.jpg"
                        },
                        new
                        {
                            Id = new Guid("981b4ed7-b0f2-4cbb-a447-76ed1e1fba4c"),
                            Code = "IVC",
                            Name = "Invercargill",
                            RegionImageProperty = "https://example.com/images/invercargill.jpg"
                        });
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKM")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
